/*
    Rule of thumb: Use grid when we have grid-like views (such sa cards)
    such as tables, cards, albums or anything where we need to manipulate different items in columns or rows
    In all other use cases consider using flex.
    The following is a great template for doing page LAYOUTS. From here you can easily continue your own project.
*/

/* Resetting margin since some browsers have their own set margin */
body {
    margin: 0 auto;
    font-family: Helvetica;
}

.container {
display: grid;
grid-template-columns: repeat(12, 1fr);    
}

.cover {
height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    display: grid;
    grid-template-columns: repeat(12, 1fr);
}

.cover {
    width:100vw;
    height:100vh;
}

.coverText {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    color: #70707c;
    font-weight: bold;
}

.coverText > h1 {
    color: #70707c;
    font-size: 100px;
}

.main-content {
    grid-column: span 12;
  }

.footer {
    text-align: center;
    padding: 3px;
    background-color: #ceced1;
    grid-column: span 12;
}

footer p {
    font-size: 1rem;
    color: white;
}


/* Za responsivness - nije testirano. 
Preuzeto s https://blog.theodo.com/2018/03/stop-using-bootstrap-layout-thanks-to-css-grid/ */ 

@media screen and (max-width: 768px) {
    .cover {
      grid-column: span 6;
    }
    .main-content {
      grid-column: span 6;
    }
  }
  @media screen and (max-width: 480px) {
    .cover {
      grid-column: span 12;
    }
    .main-content {
      grid-column: span 12;
    }
  }